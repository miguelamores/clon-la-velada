---
import DrawnXLogo from '@/components/DrawnXLogo.astro';
import HamburgerButton from '@/components/HamburgerButton.astro';

import { MOBILE_MENU_CONTENT_ID } from '@/consts/mobile-menu.ts';
import HeroLogo from '@/components/HeroLogo.astro';

const { pathname } = Astro.url;

const normalizedPathName =
  pathname.length > 1 && pathname.endsWith('/')
    ? pathname.slice(0, -1)
    : pathname;

const pages = [
  { name: 'Event', href: '/' },
  {
    name: 'Matches',
    href: '/matches',
    active: normalizedPathName.startsWith('/matches'),
  },
  { name: 'Predictions', href: '/predictions' },
  {
    name: 'tickets',
    href: 'https://www.entradas.com/artist/la-velada-del-ano/?affiliate=LVL',
    soonDate: '¡Agotadas!',
    disabled: true,
    target: '_blank',
  },
].map(page => ({
  ...page,
  active: page.active ?? normalizedPathName === page.href,
}));
---

<header class='mb-10 h-16 max-w-[100vw] lg:h-24'>
  <nav
    class='group flex h-full w-full items-center justify-between px-10 lg:justify-center'
  >
    {
      pages.map(({ name, href, soonDate, active, target }, key) => (
        <>
          <a
            href={href}
            target={target}
            rel={target === '_blank' ? 'noopener noreferrer' : undefined}
            class:list={[
              'nav-item relative hidden h-full select-none flex-col items-center justify-center gap-1 text-center text-xl uppercase lg:flex lg:px-7 xl:px-10',
              { 'current-page text-accent': active },
              { 'text-white': !active },
            ]}
            id={`nav-link-${key}`}
          >
            <span class='z-10'>{name}</span>
            {soonDate && (
              <span class='absolute z-10 mt-10 -skew-x-6 text-xs text-accent'>
                {soonDate}
              </span>
            )}
            <div class='background absolute -z-10 h-full w-full' />
          </a>
          {key === 1 && <div class:list={'hidden w-64 lg:block'} />}
        </>
      ))
    }
    <a class='block lg:hidden' href='/'> <DrawnXLogo class:list={'w-10'} /> </a>

    <HamburgerButton class:list={'block lg:hidden'} id='menuButton' />
    <div
      class='fixed inset-0 z-[888] flex w-screen flex-col items-center overflow-x-auto bg-[var(--background-color)] px-10 lg:hidden'
      id={MOBILE_MENU_CONTENT_ID}
    >
      <aside class='flex min-h-16 w-full items-center justify-between'>
        <span class='text-xl font-semibold uppercase text-primary'>Menú</span>
        <HamburgerButton id='innerMenuButton' />
      </aside>
      <div class='flex min-h-2 w-full items-center'>
        <hr
          class='h-[2px] w-full border-t-0'
          style='background:linear-gradient(to right, transparent 0%, white 50%, transparent 100%)'
        />
      </div>
      <nav class='navContent flex w-full flex-col items-center gap-5'>
        <img
          src='https://cdn.lavelada.dev/lvda.webp'
          alt='lvda logo'
          class='accent-drop-shadow my-4 max-w-60 drop-shadow-lg'
          loading='lazy'
        />
        <hr
          class='h-[2px] w-full border-t-0'
          style='background:linear-gradient(to right, transparent 0%, white 50%, transparent 100%)'
        />
        {
          pages.map(({ name, href, active }, key) => (
            <>
              <a
                href={href}
                class:list={[
                  'relative flex flex-col items-center justify-center gap-2 text-xl capitalize',
                  { 'current-page-mob': active },
                ]}
                id={`navmob-link-${key}`}
              >
                <span class='z-10 uppercase text-primary'>{name}</span>
              </a>
              <hr
                class='h-[2px] w-full border-t-0'
                style='background:linear-gradient(to right, transparent 0%, white 50%, transparent 100%)'
              />
            </>
          ))
        }
        <!-- <nav class="my-4 flex flex-col gap-10">
					<FooterContent />
					<SocialButtons class="flex items-center justify-center" />
				</nav> -->
      </nav>
    </div>
  </nav>
  <div class='relative flex h-2 w-full flex-col items-center'>
    <div
      class='gridBottomBarContainer absolute grid w-full items-center justify-between'
    >
      <div
        class:list={[
          'h-[2px] w-full rounded-l-[30%] border-t-0',
          // { gridBottomBarContainerLineLeft: !isCombatIntern },
        ]}
      >
      </div>
      <div class='focus-within-ring -ml-[8px] -mr-[4px]'>
        <a href='/' class='focus-visible:!ring-0'>
          <HeroLogo
            class:list={'text-primary h-auto w-full'}
            id='hero-logo-header'
            animated={false}
          />
        </a>
      </div>
      <div
        class:list={[
          'h-[2px] w-full rounded-l-[30%] border-t-0',
          // { gridBottomBarContainerLineRight: !isCombatIntern },
        ]}
      >
      </div>
    </div>
  </div>
</header>

<style>
  .nav-item .background {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    background: linear-gradient(
      to bottom,
      rgba(221, 221, 221, 20%) 0%,
      transparent 100%
    );
    transition: opacity 0.3s;
  }

  .nav-item:hover .background,
  .nav-item:focus .background {
    opacity: 1;
  }

  .focus-within-ring {
    @apply focus-within:ring-1 focus-within:ring-white focus-within:ring-offset-1;
  }

  #menuMobileContent {
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.3s;
    scrollbar-gutter: stable;
  }

  #menuMobileContent.open {
    opacity: 1 !important;
    pointer-events: all;
  }

  .accent-drop-shadow {
    filter: drop-shadow(0px 0px 25px rgba(var(--color-accent-rgb), 0.25));
  }

  .current-page {
  }
  .current-page:before {
    view-transition-name: nav-item;
    background: var(--color-accent);
    width: 100%;
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 8px;
  }

  .current-page-mob:before {
    background: var(--color-accent);
    width: 10px;
    content: '';
    position: absolute;
    top: 50%;
    left: -20px;
    height: 10px;
    border-radius: 100%;
    transform: translateY(-50%);
  }

  .gridBottomBarContainer {
    grid-template-columns: 1fr 6rem 1fr;
    grid-template-rows: 4px;
  }

  .gridBottomBarContainerLineLeft {
    background: linear-gradient(
      to right,
      transparent 3%,
      white 35%,
      white 100%
    );
  }

  .gridBottomBarContainerLineRight {
    background: linear-gradient(to left, transparent 3%, white 35%, white 100%);
  }

  @media (min-width: 1024px) {
    .gridBottomBarContainer {
      grid-template-columns: 1fr 9rem 1fr;
    }
  }
  @media (prefers-reduced-motion) {
    .nav-item .background {
      transition: opacity 0s;
    }

    .nav-item:hover .background,
    .nav-item:focus .background {
      opacity: 1;
    }

    #menuMobileContent {
      transition: opacity 0s;
    }
  }
</style>

<script>
  function toggleMenu(
    nav: HTMLElement | null,
    menuMobileContent: HTMLElement | null,
    navContent: HTMLElement | null
  ) {
    menuMobileContent?.classList.toggle('open');
    nav?.classList.toggle('open');
    navContent?.classList.toggle('animate-bounce-fade-in');
    document.body.classList.toggle('overflow-hidden');
    document.body.classList.toggle('lg:overflow-auto');
  }

  document.addEventListener('astro:page-load', () => {
    const nav = document.querySelector('nav');
    const menuButton = document.querySelector('#menuButton');
    const innerMenuButton = document.querySelector('#innerMenuButton');
    const menuMobileContext = document.querySelector('#menuMobileContent');
    const navContent = document.querySelector('.navContent');

    menuButton?.addEventListener('hamburgerButtonClicked', () =>
      toggleMenu(nav, menuMobileContext, navContent)
    );
    innerMenuButton?.addEventListener('hamburgerButtonClicked', () =>
      toggleMenu(nav, menuMobileContext, navContent)
    );

    if (menuMobileContext?.classList.contains('open')) {
      toggleMenu(nav, menuMobileContext, navContent);
    }
  });
</script>
