<div id="smoke-bkg" class="fixed top-0 h-full w-full -z-10"></div>

<script>
  import * as THREE from "three";

  const $bkg = document.getElementById("smoke-bkg");

  let w = window.innerWidth;
  let h = window.innerHeight;

  // 3 basics of THREE: scene, camera, renderer

  const scene = new THREE.Scene();

  const camera = new THREE.PerspectiveCamera(75, w / h, 1, 1000);
  camera.position.z = 10;
  scene.add(camera);

  const renderer = new THREE.WebGLRenderer();
  renderer.setSize(w, h);
  renderer.setClearColor(0xdddddd, 1);

  $bkg?.appendChild(renderer.domElement);

  // add light
  const light = new THREE.DirectionalLight(0xffffff, 0.5);
  light.position.set(-1, 3, 1);
  scene.add(light);

  const helper = new THREE.DirectionalLightHelper(light, 5);
  scene.add(helper);

  // we need 3 things to create an object
  // 1. geometry
  // const geometry = new THREE.BoxGeometry(1, 1, 1);
  // // 2. material
  // const material = new THREE.MeshBasicMaterial({ color: 0x0099ff });
  // // 3. mesh
  // const cube = new THREE.Mesh(geometry, material);
  // scene.add(cube);

  const smokeParticles: THREE.Mesh[] = [];

  const loader = new THREE.TextureLoader();
  loader.crossOrigin = "";
  loader.load("/smoke.webp", (texture) => {
    // Create geaometry
    const smokeGeo = new THREE.PlaneGeometry(300, 300);

    // material
    const smokeMaterial = new THREE.MeshLambertMaterial({
      map: texture,
      transparent: true,
    });

    const NUM_OF_PARTICLES = 300;
    for (let p = 0; p < NUM_OF_PARTICLES; p++) {
      // create mesh with geometry and material
      const particle = new THREE.Mesh(smokeGeo, smokeMaterial);

      //set position in x, y, z
      particle.position.set(
        Math.random() * 500 - 250, // x (from -250 to 250)
        Math.random() * 500 - 250, // y (from -250 to 250)
        Math.random() * 1000 - 100 // z (from -100 to 900)
      );

      // set z
      particle.position.z = Math.random() * 360;
      scene.add(particle);
      smokeParticles.push(particle);
    }
  });

  function resize() {
    h = window.innerHeight;
    w = window.innerWidth;
    camera.aspect = w / h;
    camera.updateProjectionMatrix(); // method must be called always you change camera parameters
    renderer.setSize(w, h);
  }

  function animate() {
    requestAnimationFrame(animate);

    smokeParticles.forEach((particle) => {
      particle.rotation.z += 0.001;
    });

    renderer.render(scene, camera);
  }
  animate();

  window.addEventListener("resize", resize);
</script>
