---
import { BOXERS } from "@/consts/boxers";
import { COUNTRIES } from "@/consts/countries";
import Typography from "@/components/Typography.astro";
import BoxerBigImage from "@/components/BoxerBigImage.astro";
import ColumnBoxers from "@/components/ColumnBoxers.astro";

const listOfBoxers = BOXERS.map((boxer) => {
  const { country } = boxer;
  const countryName = COUNTRIES[country]?.name || "";
  return { ...boxer, countryName };
});

const selectedBoxerId = Astro.url.searchParams.get("boxer");
const selectedBoxer =
  listOfBoxers.find(({ id }) => id === selectedBoxerId) || listOfBoxers[0];

const boxerColumns = [
  listOfBoxers.slice(0, 6),
  listOfBoxers.slice(6, 11),
  listOfBoxers.slice(11, 16),
  listOfBoxers.slice(16, 22),
];
---

<section class="my-40">
  <Typography
    as="h3"
    variant="stronger-title"
    color="primary"
    class:list={"text-center"}
    id="selectedBoxer"
  >
    CHOOSE YOUR FIGHTER
  </Typography>

  <Typography as="p" variant="body" color="neutral" class="mt-4 text-center">
    Conoce los detalles de cada boxeador
  </Typography>

  <div
    class="mt-8 flex flex-col items-center justify-center gap-8 md:mt-32 md:flex-row lg:mt-0"
  >
    <article
      class="relative flex w-full max-w-[70%] flex-col items-center justify-center md:absolute md:max-w-full lg:-mt-32"
    >
      <BoxerBigImage
        id={selectedBoxer.id}
        name={selectedBoxer.name}
        country={selectedBoxer.country}
        countryName={selectedBoxer.countryName}
        loading={selectedBoxerId ? "eager" : "lazy"}
      />
    </article>

    <div class="boxers-nav hidden w-full justify-between md:flex">
      <nav class="boxers-lists flex h-full justify-start gap-4 py-4">
        <ColumnBoxers
          boxers={boxerColumns[0]}
          selectedBoxer={selectedBoxer}
          imgLoading={!selectedBoxerId ? "lazy" : undefined}
        />
        <ColumnBoxers
          boxers={boxerColumns[1]}
          selectedBoxer={selectedBoxer}
          imgLoading={!selectedBoxerId ? "lazy" : undefined}
          class="mt-12"
        />
      </nav>

      <nav class="boxers-lists flex h-full justify-end gap-2 py-4">
        <ColumnBoxers
          boxers={boxerColumns[2]}
          selectedBoxer={selectedBoxer}
          class="mt-12"
          imgLoading={!selectedBoxerId ? "lazy" : undefined}
        />
        <ColumnBoxers
          boxers={boxerColumns[3]}
          selectedBoxer={selectedBoxer}
          imgLoading={!selectedBoxerId ? "lazy" : undefined}
        />
      </nav>
    </div>
  </div>

  <aside class="mt-44 grid gap-x-10 gap-y-4">
    {
      listOfBoxers.map(({ id, name, country, countryName }) => (
        <a
          target="_blank"
          rel="noopener noreferer"
          href={`/boxers/${id}`}
          title={`Visit the page of ${name} boxer`}
          class="boxer-link group relative flex h-20 justify-center items-center"
          data-id={id}
          data-name={name}
          data-country={country}
          data-country-name={countryName}
        >
          <img
            loading="lazy"
            src={`/img/boxers/${id}-small.webp`}
            alt={`Small boxer image of ${name}`}
            class="boxer-image w-full -mt-10 px-2 transition object-contain group-hover:scale-110"
          />
        </a>
      ))
    }
  </aside>
</section>
<script>
  document.addEventListener("astro:page-load", () => {
    const boxerLinks = document.querySelectorAll(".boxer-link");
    const boxerNav = document.querySelector(".boxers-nav");

    if (!boxerNav) return;

    const boxerTitle = document.querySelector(
      ".boxer-title"
    ) as HTMLImageElement;
    const boxerPhoto = document.querySelector(
      ".boxer-photo"
    ) as HTMLPictureElement;
    const boxerCountry = document.querySelector(
      ".boxer-flag"
    ) as HTMLImageElement;

    const updatedSelectedBoxerId =
      localStorage.getItem("selected:boxer") ||
      new URLSearchParams(window.location.search).get("boxer") ||
      "el-mariana";
  });

  const boxerLinks = document.querySelectorAll(".boxer-link");
  const boxerTitle = document.querySelector(".boxer-title") as HTMLImageElement;
  const boxerPhoto = document.querySelector(".boxer-photo") as HTMLImageElement;
  const boxerCountry = document.querySelector(
    ".boxer-flag"
  ) as HTMLImageElement;

  boxerLinks.forEach((link) => {
    link.addEventListener("mouseenter", (event) => {
      const { id, name, country, countryName } = event.currentTarget.dataset;

      const boxerSrc = `/img/boxers/${id}-big.webp`;
      const titleSrc = `/img/boxers/${id}-title.webp`;

      boxerTitle.src = titleSrc;
      boxerPhoto.src = boxerSrc;
      boxerCountry.src = `/img/flags/${country}.webp`;

      boxerPhoto.alt = `Picture of ${name}`;
      boxerTitle.alt = name;
      boxerCountry.alt = `Flag of ${countryName}`;
    });
  });
</script>

<style>
  .boxer-link {
    background: linear-gradient(
      to bottom,
      rgba(255, 255, 255, 0.1) 0%,
      transparent 40%,
      transparent 100%
    );
    transition: all 0.5s ease;
  }

  .boxer-link::before {
    content: "";
    position: absolute;
    inset: 0;
    display: block;
    background: linear-gradient(
      to bottom,
      rgba(255, 255, 255, 0.2) 0%,
      transparent 40%,
      transparent 100%
    );
    opacity: 0;
    height: 50%;
    transition:
      opacity 0.2s ease-in-out,
      height 0.2s ease-in-out;
  }

  .boxer-link:hover::before {
    opacity: 0.8;
    height: 90%;
    box-shadow: 0 0px 3px rgba(50, 50, 50, 0.75);
  }

  .boxer-image {
    transition: transform 0.3s ease-in-out;
  }

  .boxer-link:hover .boxer-image {
    transform: scale(1.1);
  }

  aside {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    grid-auto-rows: 80px;

    a {
      grid-column: span 2;

      &:nth-child(11n + 7) {
        grid-column-start: 2;
        grid-column-end: 4;
      }
    }
  }
</style>
